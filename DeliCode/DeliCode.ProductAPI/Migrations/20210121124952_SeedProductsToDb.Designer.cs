// <auto-generated />
using System;
using DeliCode.ProductAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeliCode.ProductAPI.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20210121124952_SeedProductsToDb")]
    partial class SeedProductsToDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DeliCode.ProductAPI.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AmountInStorage")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b942715-1c92-48d7-b32b-7de961872d71"),
                            AmountInStorage = 3,
                            Description = "Varma, frysta",
                            ImageUrl = "img/bullar-min.jpg",
                            Name = "Kanelbulle",
                            Price = 9.50m
                        },
                        new
                        {
                            Id = new Guid("a215f4e8-fc3c-4b32-95ec-93598b3517ec"),
                            AmountInStorage = 0,
                            Description = "Extra florsocker, extra kall",
                            ImageUrl = "img/kladdkaka-min.jpg",
                            Name = "Kladdkaka",
                            Price = 50.00m
                        },
                        new
                        {
                            Id = new Guid("c273dbe9-06bd-4907-bda7-440baa3fb136"),
                            AmountInStorage = 3,
                            Description = "Innehåller grädde och is",
                            ImageUrl = "img/tarta-min.jpg",
                            Name = "Tårta",
                            Price = 79.90m
                        },
                        new
                        {
                            Id = new Guid("17bf3cf4-5d40-40a5-b169-b5feea2564eb"),
                            AmountInStorage = 1,
                            Description = "En vanlig cheesecake, mellanfryst",
                            ImageUrl = "img/ostkaka-min.jpg",
                            Name = "Cheesecake",
                            Price = 29.90m
                        },
                        new
                        {
                            Id = new Guid("cb6745ff-1656-4451-b81c-af1b04a394b7"),
                            AmountInStorage = 4,
                            Description = "Stora, tinade",
                            ImageUrl = "img/muffin-min.jpg",
                            Name = "Muffin",
                            Price = 19.90m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
